plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

allprojects {
	group = 'org.starter'
	version = '0.0.1'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	repositories {
		mavenCentral()
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
subprojects { // 각 모듈에 적용할 공통 설정

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies {
		// jpa
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

		// lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		// querydsl
		implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
		annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api"

		// jwt
//		implementation 'io.jsonwebtoken:jjwt:0.9.1'
//		implementation 'com.sun.xml.bind:jaxb-impl:4.0.1'
//		implementation 'com.sun.xml.bind:jaxb-core:4.0.1'
//		implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

		// lang3
		implementation 'org.apache.commons:commons-lang3:3.14.0'
	}

	tasks.named('bootJar') { //빌드할 때 bootjar 파일로 하겠다는 의미
		enabled = false
	}

	tasks.named('jar') { //빌드할 때 jar 파일로 하겠다는 의미
		enabled = true
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}